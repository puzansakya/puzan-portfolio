@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --glitch-translate: 8px;
  }
  
  /* Generate CSS for different stack counts */
  .stack {
    display: grid;
    grid-template-columns: 1fr;
  }
  
  .stack-item {
    @apply font-medium;
    
    grid-row-start: 1;
    grid-column-start: 1;
    font-size: 1rem;
    animation: stack 340ms cubic-bezier(0.46, 0.29, 0, 1.24) 1 backwards,
      glitch 2s ease infinite 2s alternate-reverse;
  }
  
  .stack-item:nth-child(odd) {
    --glitch-translate: 8px;
  }
  
  .stack-item:nth-child(even) {
    --glitch-translate: -8px;
  }
  
  @keyframes stack {
    0% {
      opacity: 0;
      transform: translateX(-50%);
      text-shadow: -2px 3px 0 red, 2px -3px 0 blue;
    }
  
    60% {
      opacity: 0.5;
      transform: translateX(50%);
    }
  
    80% {
      transform: none;
      opacity: 1;
      text-shadow: 2px -3px 0 red, -2px 3px 0 blue;
    }
  
    100% {
      text-shadow: none;
    }
  }
  
  @keyframes glitch {
    0% {
      text-shadow: -2px 3px 0 red, 2px -3px 0 blue;
      transform: translate(var(--glitch-translate));
    }
  
    2% {
      text-shadow: 2px -3px 0 red, -2px 3px 0 blue;
    }
  
    4%,
    100% {
      text-shadow: none;
      transform: none;
    }
  }
  
  /* Generate CSS for stacks dynamically using a preprocessor like SASS or LESS */
  :root {
    --stack-count: 3; /* Default value */
  }
  
  /* Use a CSS preprocessor to generate these dynamically for each stack count */
  .stack.stacks-3 .stack-item {
    --stacks: 3;
  }
  
  .stack.stacks-3 .stack-item-0 {
    --index: 0;
    --stack-height: calc(100% / var(--stacks) - 1px);
    --inverse-index: calc(var(--stacks) - 1 - var(--index));
    --clip-top: calc(var(--stack-height) * var(--index));
    --clip-bottom: calc(var(--stack-height) * var(--inverse-index));
    clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
    animation-delay: calc(var(--index) * 120ms);
  }
  
  .stack.stacks-3 .stack-item-1 {
    --index: 1;
    --stack-height: calc(100% / var(--stacks) - 1px);
    --inverse-index: calc(var(--stacks) - 1 - var(--index));
    --clip-top: calc(var(--stack-height) * var(--index));
    --clip-bottom: calc(var(--stack-height) * var(--inverse-index));
    clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
    animation-delay: calc(var(--index) * 120ms);
  }
  
  .stack.stacks-3 .stack-item-2 {
    --index: 2;
    --stack-height: calc(100% / var(--stacks) - 1px);
    --inverse-index: calc(var(--stacks) - 1 - var(--index));
    --clip-top: calc(var(--stack-height) * var(--index));
    --clip-bottom: calc(var(--stack-height) * var(--inverse-index));
    clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
    animation-delay: calc(var(--index) * 120ms);
  }
  
  /* Repeat the above pattern for other possible values of --stacks */
  